% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helper.R
\name{get_input}
\alias{get_input}
\title{Prepare input to fit \code{k_ontram} or \code{k_ontram_ci} model}
\usage{
get_input(
  mod = c("silscs", "sics", "cils", "ci"),
  x_train = NULL,
  x_val = NULL,
  x_test = NULL,
  im_train,
  im_val,
  im_test
)
}
\description{
Prepare input to fit \code{k_ontram} or \code{k_ontram_ci} model
}
\examples{
nn <- function(output_shape = NULL, mbl = FALSE, input_shape = dim(im)[2:4], ...) {
  m <- keras_model_sequential() \%>\%
    layer_conv_2d(filters = 16,
                  input_shape = input_shape, kernel_size = c(3, 3), activation = "relu") \%>\%
    layer_max_pooling_2d(pool_size = c(2, 2)) \%>\%
    layer_conv_2d(filters = 32, kernel_size = c(3, 3), padding = "same", activation = "relu") \%>\%
    layer_max_pooling_2d(pool_size = c(2, 2)) \%>\%
    layer_flatten() \%>\%
    layer_dense(units = 50, activation = "relu") \%>\%
    layer_dense(output_shape, activation = "linear", use_bias = FALSE) \%>\%
    {if (mbl){
      ontram::layer_trafo_intercept()(.)
    } else .
    }
  return(m)
}

mnist <- dataset_mnist()
c(c(x_train, y_train), c(x_test, y_test)) \%<-\% mnist
x_train <- array_reshape(x_train, c(60000, 28, 28, 1))
im <- x_train / 255
im_train <- im[1:50,,,, drop = FALSE]
im_val <- im[51:70,,,, drop = FALSE]
im_test <- im[71:90,,,, drop = FALSE]

inp <- get_input(mod = "sics", im_train = im_train, im_val = im_val, im_test = im_test)
inp_train <- inp$inp_train
inp_val <- inp$inp_val
inp_test <- inp$inp_test
}
